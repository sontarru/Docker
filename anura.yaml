services:

  rabbitmq:
    container_name: rabbitmq
    image: rabbitmq:management
    restart: unless-stopped
    environment:
     RABBITMQ_DEFAULT_USER: root
     RABBITMQ_DEFAULT_PASS: ${SECRET}
    ports:
      # management port
      - 15672:15672
      # messaging port
      - 5672:5672

  postgres:
    container_name: postgres
    image: postgres
    restart: unless-stopped
    ports:
      # Default PG port
      - 5432:5432
    environment:
      POSTGRES_PASSWORD: ${SECRET}
    volumes:
      - ./postgres/data:/var/lib/postgresql/data

  pgadmin:
    container_name: pgadmin
    image: dpage/pgadmin4
    restart: unless-stopped
    ports:
      - 5050:80
    environment:
      PGADMIN_DEFAULT_EMAIL: pgadmin@sontar.ru
      PGADMIN_DEFAULT_PASSWORD: ${SECRET}
    volumes:
      - ./pgadmin:/var/lib/pgadmin
    depends_on:
      - postgres

  mongo:
    container_name: mongo
    image: mongo
    restart: unless-stopped
    ports:
      - 27017:27017
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: ${SECRET}

  mongo-express:
    container_name: mongo-express
    image: mongo-express
    restart: unless-stopped
    ports:
      - 8081:8081
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: root
      ME_CONFIG_MONGODB_ADMINPASSWORD: ${SECRET}
      ME_CONFIG_MONGODB_URL: mongodb://mongo:27017
    depends_on:
      - mongo

  redis-stack:
    container_name: redis-stack
    image: redis/redis-stack
    restart: unless-stopped
    ports:
      # Default Redis port
      - 6379:6379
      # Web UI
      - 8001:8001

  # https://www.elastic.co/docs/deploy-manage/deploy/self-managed/install-elasticsearch-docker-basic
  elasticsearch:
    container_name: elasticsearch
    image: elastic/elasticsearch:8.17.5
    restart: unless-stopped
    ports:
      - 0.0.0.0:9200:9200
#   volumes:
#     - ./elasticsearch/data:/usr/share/elasticsearch/data
#   deploy:
#     resources:
#       limits:
#         memory: 1g

  kibana:
    container_name: kibana
    image: kibana:8.18.0
    restart: unless-stopped
    ports:
      - 5601:5601
    environment:
      ELASTICSEARCH_URL: http://localhost:9200
    depends_on:
      - elasticsearch

  jellyfin:
    image: jellyfin/jellyfin
    restart: unless-stopped
    container_name: jellyfin
    ports:
      - 8096:8096
    volumes:
      - ./jellyfin/config:/config
      - ./jellyfin/cache:/cache
      - ${USERPROFILE}/Videos/Series:/media/series
      - ${USERPROFILE}/Videos/Movies:/media/movies

  minio:
    image: quay.io/minio/minio
    restart: unless-stopped
    container_name: minio
    ports:
      - 9000:9000
      - 9001:9001
    environment:
      MINIO_ROOT_USER: root
      MINIO_ROOT_PASSWORD: ${SECRET}
    volumes:
      - ./minio/data:/data
    command: server /data --console-address ":9001"

  mssql:
    image: mcr.microsoft.com/mssql/server
    restart: unless-stopped
    container_name: mssql
    ports:
      - 1433:1433
    environment:
      ACCEPT_EULA: Y
      MSSQL_SA_PASSWORD: ${SECRET}

  registry:
    image: registry
    restart: unless-stopped
    container_name: registry
    ports:
      - "5000:5000"
